'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _Property = require('./Property');

var _Property2 = _interopRequireDefault(_Property);

var _helpers = require('./helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PropertyDecoder = function PropertyDecoder(identifier, namespace) {
  _classCallCheck(this, PropertyDecoder);

  _initialiseProps.call(this);

  this.identifier = identifier;
  this.namespace = namespace;
  this.value = undefined;
  this.isArray = false;
  this.subProperties = [];
  this.subPropertiesIdentifierNamespace = null;
};

var _initialiseProps = function _initialiseProps() {
  var _this = this;

  this.array = function () {
    _this.isArray = true;
    return _this;
  };

  this.parseComponents = function (data, timestamp, error) {
    var isRoot = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

    if (_this.subProperties.length > 0) {
      var subProperty = _this.findSubProperty(data[0]);

      if (!!subProperty) {
        if (_this.subPropertiesIdentifierNamespace !== null) {
          return _defineProperty({}, _this.namespace, [_this.handlePropertyWrap(_extends(_defineProperty({}, _this.subPropertiesIdentifierNamespace, subProperty.identifierValue), subProperty.parseComponents(data.slice(1, data.length), timestamp, error, false)), timestamp, error, isRoot)]);
        }

        return _this.handlePropertyWrap(subProperty.parseComponents(data.slice(1, data.length), timestamp, error, false), timestamp, error, isRoot);
      }

      return undefined;
    } else if (_this.isArray) {
      return _defineProperty({}, _this.namespace, [_this.handlePropertyWrap(_this.decode(data), timestamp, error, isRoot)]);
    } else if (_this.namespace) {
      return _defineProperty({}, _this.namespace, _this.handlePropertyWrap(_this.decode(data), timestamp, error, isRoot));
    }

    return _this.handlePropertyWrap(_this.decode(data), timestamp, error, isRoot);
  };

  this.handlePropertyWrap = function (decodedValue, timestamp, error, isRoot) {
    return isRoot ? new _Property2.default(decodedValue, timestamp ? (0, _helpers.timestampDecoder)(timestamp) : undefined, error) : decodedValue;
  };

  this.decode = function (data) {
    if (!!_this.decoder) {
      return _this.decoder(data);
    } else if (data.length === 1) {
      return data[0];
    }

    return data;
  };

  this.setDecoder = function (decoder) {
    _this.decoder = decoder;
    return _this;
  };

  this.setOptionalSubProperties = function (identifierNamespace, subProperties) {
    var _subProperties;

    (_subProperties = _this.subProperties).push.apply(_subProperties, _toConsumableArray(subProperties));
    _this.subPropertiesIdentifierNamespace = identifierNamespace;
    return _this;
  };

  this.findSubProperty = function (identifier) {
    return _this.subProperties.find(function (supProperty) {
      return supProperty.identifier === identifier;
    });
  };
};

exports.default = PropertyDecoder;