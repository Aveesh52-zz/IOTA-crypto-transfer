'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Command = require('./Command');

var _Command2 = _interopRequireDefault(_Command);

var _BaseCommand2 = require('./BaseCommand');

var _BaseCommand3 = _interopRequireDefault(_BaseCommand2);

var _encoding = require('../encoding');

var _validate = require('../validate');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HomeChargerCommand = function (_BaseCommand) {
  _inherits(HomeChargerCommand, _BaseCommand);

  function HomeChargerCommand() {
    _classCallCheck(this, HomeChargerCommand);

    return _possibleConstructorReturn(this, (HomeChargerCommand.__proto__ || Object.getPrototypeOf(HomeChargerCommand)).apply(this, arguments));
  }

  _createClass(HomeChargerCommand, null, [{
    key: 'getState',

    /**
     * @function getState
     */
    value: function getState() {
      return new _Command2.default([0x00, 0x60, 0x00]);
    }

    /**
     * @function setChargeCurrent
     *
     * @property {Number} current (number) Charge current
     */

  }, {
    key: 'setChargeCurrent',
    value: function setChargeCurrent(current) {
      (0, _validate.validate)([{
        value: current,
        name: 'Charge current',
        condition: _validate.Joi.number().required()
      }]);

      return new _Command2.default([0x00, 0x60, 0x12].concat(_toConsumableArray(this.buildProperty(0x01, (0, _encoding.base10ToIeee754)(current)))));
    }

    /**
     * @function setPriceTariffs
     *
     * @property {Array} priceTariffs (Array `[Object {pricingType: (string: 'starting_fee, per_minute, per_kwh'), currency: (string ISO 4217), price: (number)}]`) Price tariffs
     *
     * @example setPriceTariffs
      const response = await hmkit.telematics.sendCommand(
        vehicleSerial,
        hmkit.commands.HomeChargerCommand.setPriceTariffs([
          {
            pricingType: 'starting_fee',
            currency: 'EUR',
            price: 2.5,
          },
          {
            pricingType: 'per_kwh',
            currency: 'USD',
            price: 1.3,
          },
        ])
      );
     */

  }, {
    key: 'setPriceTariffs',
    value: function setPriceTariffs(priceTariffs) {
      return new _Command2.default([0x00, 0x60, 0x13].concat(_toConsumableArray(this.getPriceTariffsBytes(priceTariffs))));
    }

    /**
     * @function activateSolarCharging
     */

  }, {
    key: 'activateSolarCharging',
    value: function activateSolarCharging() {
      return new _Command2.default([0x00, 0x60, 0x14].concat(_toConsumableArray(this.buildProperty(0x01, 0x01))));
    }

    /**
     * @function deactivateSolarCharging
     */

  }, {
    key: 'deactivateSolarCharging',
    value: function deactivateSolarCharging() {
      return new _Command2.default([0x00, 0x60, 0x14].concat(_toConsumableArray(this.buildProperty(0x01, 0x00))));
    }

    /**
     * @function enableWifiHotspot
     */

  }, {
    key: 'enableWifiHotspot',
    value: function enableWifiHotspot() {
      return new _Command2.default([0x00, 0x60, 0x15].concat(_toConsumableArray(this.buildProperty(0x01, 0x01))));
    }

    /**
     * @function disableWifiHotspot
     */

  }, {
    key: 'disableWifiHotspot',
    value: function disableWifiHotspot() {
      return new _Command2.default([0x00, 0x60, 0x15].concat(_toConsumableArray(this.buildProperty(0x01, 0x00))));
    }

    /**
     * @function authenticate
     */

  }, {
    key: 'authenticate',
    value: function authenticate() {
      return new _Command2.default([0x00, 0x60, 0x16].concat(_toConsumableArray(this.buildProperty(0x01, 0x01))));
    }

    /**
     * @function expireAuthentication
     */

  }, {
    key: 'expireAuthentication',
    value: function expireAuthentication() {
      return new _Command2.default([0x00, 0x60, 0x16].concat(_toConsumableArray(this.buildProperty(0x01, 0x00))));
    }
  }, {
    key: 'getPriceTariffsBytes',
    value: function getPriceTariffsBytes(priceTariffs) {
      var _this2 = this;

      var pricingTypeOptions = {
        starting_fee: 0x00,
        per_minute: 0x01,
        per_kwh: 0x02
      };

      return priceTariffs.reduce(function (priceTariffsBytes, _ref) {
        var pricingType = _ref.pricingType,
            currency = _ref.currency,
            price = _ref.price;

        var currentPricingType = pricingTypeOptions[pricingType];

        if (currentPricingType !== undefined) {
          return priceTariffsBytes.concat(_this2.buildProperty(0x0c, [currentPricingType].concat(_toConsumableArray((0, _encoding.base10ToIeee754)(price)), _toConsumableArray((0, _encoding.stringToBytes)(currency)))));
        }

        return priceTariffsBytes;
      }, []);
    }
  }]);

  return HomeChargerCommand;
}(_BaseCommand3.default);

exports.default = HomeChargerCommand;