'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _PropertyResponse2 = require('../PropertyResponse');

var _PropertyResponse3 = _interopRequireDefault(_PropertyResponse2);

var _OptionalPropertyDecoder = require('../OptionalPropertyDecoder');

var _OptionalPropertyDecoder2 = _interopRequireDefault(_OptionalPropertyDecoder);

var _PropertyDecoder = require('../PropertyDecoder');

var _PropertyDecoder2 = _interopRequireDefault(_PropertyDecoder);

var _helpers = require('../helpers');

var _encoding = require('../encoding');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LightsResponse = function (_PropertyResponse) {
  _inherits(LightsResponse, _PropertyResponse);

  /**
   * @property {String} frontExteriorLight (string 'inactive|active|active_with_full_beam|dlr|automatic') Front exterior light state
   * @property {String} rearExteriorLight (string 'inactive|active') Rear exterior light state
   * @property {String} ambientLight (string) Ambient light color
   * @property {String} reverseLight (string 'inactive|active') Reverse light state
   * @property {String} emergencyBrakeLight (string 'inactive|active') Emergency brake light state
   * @property {Array} fogLights (array) Fog lights ([{ location: (string 'front|rear'), state: (string 'inactive|active') }])
   * @property {Array} readingLamps (Array Reading lamps { location: (string 'front_left|front_right|rear_right|rear_left'), state: (string 'inactive|active')}`)
   * @property {Array} interiorLights (array) Interior lights ([{ location: (string 'front|rear'), state: (string 'inactive|active') }])
   *
   *
   * @example LightsResponse
    {
      frontExteriorLight: {
        value: 'inactive',
      },
      rearExteriorLight: {
        value: 'inactive',
      },
      ambientLight: {
        value: '#000000',
      },
      reverseLight: {
        value: 'inactive',
      },
      emergencyBrakeLight: {
        value: 'inactive',
      },
      fogLights: [{
        value: {
          location: 'front',
          state: 'inactive',
        },
      }, {
        value: {
          location: 'rear',
          state: 'inactive',
        },
      }],
      readingLamps: [{
        value: {
          location: 'front_left',
          state: 'inactive',
        },
      }, {
        value: {
          location: 'front_right',
          state: 'inactive',
        },
      }, {
        value: {
          location: 'rear_right',
          state: 'inactive',
        },
      }, {
        value: {
          location: 'rear_left',
          state: 'inactive',
        },
      }],
      interiorLights: [{
        value: {
          location: 'front',
          state: 'inactive',
        },
      }, {
        value: {
          location: 'rear',
          state: 'inactive',
        },
      }],
    }
   */
  function LightsResponse(data, config) {
    _classCallCheck(this, LightsResponse);

    var _this = _possibleConstructorReturn(this, (LightsResponse.__proto__ || Object.getPrototypeOf(LightsResponse)).call(this));

    var properties = [new _PropertyDecoder2.default(0x01, 'frontExteriorLight').setDecoder((0, _helpers.switchDecoder)({
      0x00: 'inactive',
      0x01: 'active',
      0x02: 'active_with_full_beam',
      0x03: 'dlr',
      0x04: 'automatic'
    })), new _PropertyDecoder2.default(0x02, 'rearExteriorLight').setDecoder((0, _helpers.switchDecoder)({
      0x00: 'inactive',
      0x01: 'active'
    })), new _PropertyDecoder2.default(0x04, 'ambientLight').setDecoder(_this.ambientLightDecoder), new _PropertyDecoder2.default(0x05, 'reverseLight').setDecoder((0, _helpers.switchDecoder)({
      0x00: 'inactive',
      0x01: 'active'
    })), new _PropertyDecoder2.default(0x06, 'emergencyBrakeLight').setDecoder((0, _helpers.switchDecoder)({
      0x00: 'inactive',
      0x01: 'active'
    })), new _PropertyDecoder2.default(0x07, 'fogLights').setOptionalSubProperties('location', [new _OptionalPropertyDecoder2.default(0x00, 'front').setDecoder(_this.lightsDecoder), new _OptionalPropertyDecoder2.default(0x01, 'rear').setDecoder(_this.lightsDecoder)]), new _PropertyDecoder2.default(0x08, 'readingLamps').setOptionalSubProperties('location', [new _OptionalPropertyDecoder2.default(0x00, 'front_left').setDecoder(_this.lightsDecoder), new _OptionalPropertyDecoder2.default(0x01, 'front_right').setDecoder(_this.lightsDecoder), new _OptionalPropertyDecoder2.default(0x02, 'rear_right').setDecoder(_this.lightsDecoder), new _OptionalPropertyDecoder2.default(0x03, 'rear_left').setDecoder(_this.lightsDecoder)]), new _PropertyDecoder2.default(0x09, 'interiorLights').setOptionalSubProperties('location', [new _OptionalPropertyDecoder2.default(0x00, 'front').setDecoder(_this.lightsDecoder), new _OptionalPropertyDecoder2.default(0x01, 'rear').setDecoder(_this.lightsDecoder)])];

    _this.parse(data, properties, config);
    return _this;
  }

  _createClass(LightsResponse, [{
    key: 'lightsDecoder',
    value: function lightsDecoder(data) {
      return {
        state: (0, _helpers.switchDecoder)({
          0x00: 'inactive',
          0x01: 'active'
        })(data)
      };
    }
  }, {
    key: 'ambientLightDecoder',
    value: function ambientLightDecoder(values) {
      return '#' + (0, _encoding.hexArrayToHex)(values);
    }
  }]);

  return LightsResponse;
}(_PropertyResponse3.default);

LightsResponse.identifier = [0x00, 0x36];
exports.default = LightsResponse;