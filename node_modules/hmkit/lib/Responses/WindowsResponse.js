'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _PropertyResponse2 = require('../PropertyResponse');

var _PropertyResponse3 = _interopRequireDefault(_PropertyResponse2);

var _PropertyDecoder = require('../PropertyDecoder');

var _PropertyDecoder2 = _interopRequireDefault(_PropertyDecoder);

var _OptionalPropertyDecoder = require('../OptionalPropertyDecoder');

var _OptionalPropertyDecoder2 = _interopRequireDefault(_OptionalPropertyDecoder);

var _helpers = require('../helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WindowsResponse = function (_PropertyResponse) {
  _inherits(WindowsResponse, _PropertyResponse);

  /**
   * @property {Array} windowsOpenPercentages Windows open percentages ([{ windowLocation: (string: 'front_left|front_right|rear_right|rear_left|hatch'), openPercentage: (number) }])
   * @property {Array} windowsPositions Windows positions ([{ windowLocation: (string: 'front_left|front_right|rear_right|rear_left|hatch'), windowPosition: (string: 'closed|opened|intermediate') }])
   *
   * @example WindowsResponse
    {
      windowsOpenPercentages: [{
        value: {
          windowLocation: 'front_left',
          openPercentage: 0.6,
        },
      }, {
        value: {
          windowLocation: 'front_right',
          openPercentage: 0.6,
        },
      }, {
        value: {
          windowLocation: 'rear_right',
          openPercentage: 0.6,
        },
      }, {
        value: {
          windowLocation: 'rear_left',
          openPercentage: 0.6,
        },
      }, {
        value: {
          windowLocation: 'hatch',
          openPercentage: 0.6,
        },
      }],
      windowsPositions: [{
        value: {
          windowLocation: 'front_left',
          windowPosition: 'closed',
        },
      }, {
        value: {
          windowLocation: 'front_right',
          windowPosition: 'closed',
        },
      }, {
        value: {
          windowLocation: 'rear_right',
          windowPosition: 'closed',
        },
      }, {
        value: {
          windowLocation: 'rear_left',
          windowPosition: 'closed',
        },
      }, {
        value: {
          windowLocation: 'hatch',
          windowPosition: 'closed',
        },
      }],
    }
   */
  function WindowsResponse(data, config) {
    _classCallCheck(this, WindowsResponse);

    var _this = _possibleConstructorReturn(this, (WindowsResponse.__proto__ || Object.getPrototypeOf(WindowsResponse)).call(this));

    var properties = [new _PropertyDecoder2.default(0x02, 'windowsOpenPercentages').setOptionalSubProperties('windowLocation', [new _OptionalPropertyDecoder2.default(0x00, 'front_left').setDecoder(_this.openPercentageDecoder), new _OptionalPropertyDecoder2.default(0x01, 'front_right').setDecoder(_this.openPercentageDecoder), new _OptionalPropertyDecoder2.default(0x02, 'rear_right').setDecoder(_this.openPercentageDecoder), new _OptionalPropertyDecoder2.default(0x03, 'rear_left').setDecoder(_this.openPercentageDecoder), new _OptionalPropertyDecoder2.default(0x04, 'hatch').setDecoder(_this.openPercentageDecoder)]), new _PropertyDecoder2.default(0x03, 'windowsPositions').setOptionalSubProperties('windowLocation', [new _OptionalPropertyDecoder2.default(0x00, 'front_left').setDecoder(_this.positionDecoder), new _OptionalPropertyDecoder2.default(0x01, 'front_right').setDecoder(_this.positionDecoder), new _OptionalPropertyDecoder2.default(0x02, 'rear_right').setDecoder(_this.positionDecoder), new _OptionalPropertyDecoder2.default(0x03, 'rear_left').setDecoder(_this.positionDecoder), new _OptionalPropertyDecoder2.default(0x04, 'hatch').setDecoder(_this.positionDecoder)])];

    _this.parse(data, properties, config);
    return _this;
  }

  _createClass(WindowsResponse, [{
    key: 'openPercentageDecoder',
    value: function openPercentageDecoder(bytes) {
      return {
        openPercentage: (0, _helpers.progressDecoder)(bytes)
      };
    }
  }, {
    key: 'positionDecoder',
    value: function positionDecoder(bytes) {
      var posDecoder = (0, _helpers.switchDecoder)({
        0x00: 'closed',
        0x01: 'opened',
        0x02: 'intermediate'
      });

      return {
        windowPosition: posDecoder(bytes)
      };
    }
  }]);

  return WindowsResponse;
}(_PropertyResponse3.default);

WindowsResponse.identifier = [0x00, 0x45];
exports.default = WindowsResponse;