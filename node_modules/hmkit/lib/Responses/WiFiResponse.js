'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _PropertyResponse2 = require('../PropertyResponse');

var _PropertyResponse3 = _interopRequireDefault(_PropertyResponse2);

var _PropertyDecoder = require('../PropertyDecoder');

var _PropertyDecoder2 = _interopRequireDefault(_PropertyDecoder);

var _encoding = require('../encoding');

var _helpers = require('../helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WiFiResponse = function (_PropertyResponse) {
  _inherits(WiFiResponse, _PropertyResponse);

  /**
   * @property {String} wifiEnabled (string 'enabled|disabled') Wi-Fi enabled
   * @property {String} networkConnected (string 'connected|disconnected') Network connected
   * @property {String} networkSSID (string) Network SSID formatted in UTF-8
   * @property {String} networkSecurity (string 'none|wep|wpa|wpa2_personal') Network security
   *
   * @example WifiResponse
    {
      wifiEnabled: { value: 'enabled' },
      networkConnected: { value: 'disconnected' },
      networkSSID: { value: 'TOTALLYFREEWIFI' },
      networkSecurity: { value: 'wpa' },
    }
   */
  function WiFiResponse(data, config) {
    _classCallCheck(this, WiFiResponse);

    var _this = _possibleConstructorReturn(this, (WiFiResponse.__proto__ || Object.getPrototypeOf(WiFiResponse)).call(this));

    var properties = [new _PropertyDecoder2.default(0x01, 'wifiEnabled').setDecoder((0, _helpers.switchDecoder)({
      0x00: 'disabled',
      0x01: 'enabled'
    })), new _PropertyDecoder2.default(0x02, 'networkConnected').setDecoder((0, _helpers.switchDecoder)({
      0x00: 'disconnected',
      0x01: 'connected'
    })), new _PropertyDecoder2.default(0x03, 'networkSSID').setDecoder(_encoding.bytesToString), new _PropertyDecoder2.default(0x04, 'networkSecurity').setDecoder((0, _helpers.switchDecoder)({
      0x00: 'none',
      0x01: 'wep',
      0x02: 'wpa',
      0x03: 'wpa2_personal'
    }))];

    _this.parse(data, properties, config);
    return _this;
  }

  return WiFiResponse;
}(_PropertyResponse3.default);

WiFiResponse.identifier = [0x00, 0x59];
exports.default = WiFiResponse;