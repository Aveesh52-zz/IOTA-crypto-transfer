'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SdkNodeBindings = require('./SdkNodeBindings');

var _SdkNodeBindings2 = _interopRequireDefault(_SdkNodeBindings);

var _encoding = require('./encoding');

var _Commands = require('./Commands');

var _Commands2 = _interopRequireDefault(_Commands);

var _Telematics = require('./Telematics');

var _Telematics2 = _interopRequireDefault(_Telematics);

var _ClientCertificate = require('./ClientCertificate');

var _ClientCertificate2 = _interopRequireDefault(_ClientCertificate);

var _AccessCertificatesManager = require('./AccessCertificatesManager');

var _AccessCertificatesManager2 = _interopRequireDefault(_AccessCertificatesManager);

var _Api = require('./Api');

var _Api2 = _interopRequireDefault(_Api);

var _ApiClient = require('./ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _InvalidArgumentError = require('./InvalidArgumentError');

var _InvalidArgumentError2 = _interopRequireDefault(_InvalidArgumentError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var API_URLS = {
  hmxv: 'https://xv-platform.high-mobility.com/v1/',
  test: 'https://sandbox.api.high-mobility.com/v1/'
};

var HMKit = function () {
  function HMKit(clientCertificate, clientPrivateKey) {
    _classCallCheck(this, HMKit);

    this.clientCertificate = new _ClientCertificate2.default((0, _encoding.base64ToUint8)(clientCertificate));

    if (!clientPrivateKey || clientPrivateKey.length !== 44) {
      throw new Error('Invalid client private key.');
    }

    this.clientPrivateKey = clientPrivateKey;

    this.api = new _Api2.default(this.getApiUrl());
    this.apiClient = new _ApiClient2.default();
    this.telematics = new _Telematics2.default(this);
    this.commands = new _Commands2.default(this);
    this.crypto = new _SdkNodeBindings2.default(this);
    this.certificates = new _AccessCertificatesManager2.default(this);
  }

  _createClass(HMKit, [{
    key: 'staging',
    value: function staging() {
      this.api = new _Api2.default('https://develop.high-mobility.com/hm_cloud/api/v1/');
      return this;
    }
  }, {
    key: 'getApiUrl',
    value: function getApiUrl() {
      if (this.clientCertificate && this.clientCertificate.issuer) {
        return API_URLS[this.clientCertificate.issuer] || API_URLS.test;
      }

      return API_URLS.test;
    }
  }, {
    key: 'downloadAccessCertificate',
    value: function downloadAccessCertificate() {
      var _certificates;

      return (_certificates = this.certificates).download.apply(_certificates, arguments);
    }
  }]);

  return HMKit;
}();

HMKit.InvalidArgumentError = _InvalidArgumentError2.default;
exports.default = HMKit;