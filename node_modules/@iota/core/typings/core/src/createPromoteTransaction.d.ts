/// <reference types="bluebird" />
import * as Bluebird from 'bluebird';
import { AttachToTangle, Callback, Maybe, Provider, Transaction, Transfer } from '../../types';
export interface PromoteTransactionOptions {
    readonly delay: number;
    interrupt: boolean | (() => void);
}
export declare const getPromoteTransactionOptions: (options: Readonly<Partial<{
    delay: number;
    interrupt: boolean | (() => void);
}>>) => Readonly<{
    delay: number;
    interrupt: boolean | (() => void);
}>;
export declare const spammer: () => Transfer;
export declare const generateSpam: (n?: number) => ReadonlyArray<Transfer>;
/**
 * @method createPromoteTransaction
 *
 * @memberof module:core
 *
 * @param {Provider} provider - Network provider
 *
 * @param {Function} [attachFn] - Optional `AttachToTangle` function to override the
 * [default method]{@link #module_core.attachToTangle}.
 *
 * @return {Function} {@link #module_core.promoteTransaction `promoteTransaction`}
 */
export declare const createPromoteTransaction: (provider: Provider, attachFn?: AttachToTangle | undefined) => (tailTransaction: string, depth: number, minWeightMagnitude: number, spamTransfers?: ReadonlyArray<Transfer>, options?: Partial<PromoteTransactionOptions> | undefined, callback?: Callback<ReadonlyArray<Transaction>> | undefined) => Bluebird<Maybe<ReadonlyArray<Transaction>>>;
